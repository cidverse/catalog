# name
name: ci

# triggers
on:
  workflow_call:
    inputs:
      cid-workflow:
        required: true
        type: string
        default: main
      cid-version:
        required: true
        type: string
        default: 0.1.0
      job-pages:
        required: false
        type: boolean
        default: false
      cid-loglevel:
        description: Log level
        required: false
        default: info
        type: string
      cid-timeout:
        required: false
        type: string
        default: 30
      egress-policy:
        required: false
        type: string
        description: Allowed modes are 'block' and 'audit'. Using https://github.com/step-security/harden-runner to harden the runner.
        default: block
      egress-allowed-endpoints:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: >-
          api.github.com:443
          github.com:443
          objects.githubusercontent.com:443
          raw.githubusercontent.com:443
          quay.io:443
          cdn01.quay.io:443
          cdn02.quay.io:443
          cdn03.quay.io:443
          plugins.gradle.org:443
          plugins-artifacts.gradle.org:443
          services.gradle.org:443
          downloads.gradle.org:443
          repo.maven.apache.org:443
          repo1.maven.org:443
          jcenter.bintray.com:443
          storage.googleapis.com:443
          proxy.golang.org:443
          sum.golang.org:443
          pypi.org:443
          files.pythonhosted.org:443
      egress-allowed-endpoints-build:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: ""
      egress-allowed-endpoints-test:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: ""
      egress-allowed-endpoints-scan:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: >-
          semgrep.dev:443
          sonarcloud.io:443
          api.sonarcloud.io:443
          scanner.sonarcloud.io:443
      egress-allowed-endpoints-package:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: ""
      egress-allowed-endpoints-publish:
        required: false
        type: string
        description: Allowed endpoints for egress traffic if egress-policy is set to 'block'.
        default: ""
      env-production:
        description: name of the github environment for production releases
        required: false
        default: production
        type: string
      env-development:
        description: name of the github environment for development releases
        required: false
        default: development
        type: string
    secrets:
      # sonarcloud
      SONAR_HOST_URL:
        required: false
      SONAR_TOKEN:
        required: false
      SONAR_ORGANIZATION:
        required: false
      # java
      MAVEN_REPO_URL:
        required: false
      MAVEN_REPO_USERNAME:
        required: false
      MAVEN_REPO_PASSWORD:
        required: false
      MAVEN_GPG_SIGN_PRIVATEKEY:
        required: false
      MAVEN_GPG_SIGN_PASSWORD:
        required: false
      MAVEN_GPG_SIGN_KEYID:
        required: false

# permissions, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps
permissions:
  actions: read # detection of GitHub Actions environment
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# cancel in progress when a new run starts
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# jobs
jobs:
  # info
  info:
    name: Info
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: >
            ${{ inputs.egress-allowed-endpoints }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: info
        env:
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          echo "> project modules"
          cid --log-level=${CID_LOGLEVEL:-info} module ls
          echo "> catalog"
          cid --log-level=${CID_LOGLEVEL:-info} catalog list
          echo "> workflows"
          cid --log-level=${CID_LOGLEVEL:-info} workflow ls

  # build
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      id-token: write # provenance signing
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-build }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: build
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage build
      - name: upload artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: build-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore
      - name: github pages repo name
        if: inputs.job-pages == true
        id: extract_repo_name
        run: |
          repo_name=$(basename $GITHUB_REPOSITORY)
          repo_name=${repo_name//./-}
          echo "::set-output name=repo_name::$repo_name"
      - name: github pages artifact
        if: inputs.job-pages == true
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: .dist/${{ steps.extract_repo_name.outputs.repo_name }}/html/docs/ 

  # test
  test:
    name: Test
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-test }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: test
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage test
      - name: upload artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: test-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore

  # scan
  scan:
    name: Scan
    runs-on: ubuntu-24.04
    needs: [build, test]
    permissions:
      security-events: write
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-scan }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: download artifacts > build
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: download artifacts > test
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: test-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: scan
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage scan

  # package
  package:
    name: Package
    runs-on: ubuntu-24.04
    needs: [build]
    permissions:
      id-token: write # provenance signing
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-package }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: download artifacts > build
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: package
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage package
      - name: upload artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: package-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore

  # publish
  publish:
    name: Publish
    runs-on: ubuntu-24.04
    needs: [package, scan]
    permissions:
      # create release
      contents: write
      # publish packages
      packages: write
    if: startsWith(github.ref, 'refs/pull/') == false
    environment:
      name: ${{ github.ref == 'refs/tags/v*' && inputs.env-production || inputs.env-development }}
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: >
            ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-publish }}
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
      - name: download artifacts > package
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: package-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: publish
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_REPO_URL: ${{ secrets.MAVEN_REPO_URL }}
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
          MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
          MAVEN_GPG_SIGN_PRIVATEKEY: ${{ secrets.MAVEN_GPG_SIGN_PRIVATEKEY }}
          MAVEN_GPG_SIGN_PASSWORD: ${{ secrets.MAVEN_GPG_SIGN_PASSWORD }}
          MAVEN_GPG_SIGN_KEYID: ${{ secrets.MAVEN_GPG_SIGN_KEYID }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage publish

  # Pages
  pages:
    name: Pages
    runs-on: ubuntu-24.04
    needs: [scan]
    permissions:
      pages: write
      id-token: write
    if: startsWith(github.ref, 'refs/pull/') == false && inputs.job-pages == true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    timeout-minutes: ${{ fromJSON(inputs.cid-timeout) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: ${{ inputs.egress-policy }}
          allowed-endpoints: ${{ inputs.egress-allowed-endpoints }} ${{ inputs.egress-allowed-endpoints-publish }}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
