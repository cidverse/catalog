# name
name: ci

# triggers
on:
  workflow_call:
    inputs:
      cid-workflow:
        required: true
        type: string
        default: main
      cid-version:
        required: true
        type: string
        default: 0.1.0
      job-pages:
        required: false
        type: boolean
        default: false
      cid-loglevel:
        description: Log level
        required: false
        default: info
        type: string
      cid-timeout:
        required: true
        type: string
        default: 30
      env-production:
        description: name of the github environment for production releases
        required: false
        default: production
        type: string
      env-development:
        description: name of the github environment for development releases
        required: false
        default: development
        type: string
    secrets:
      # sonarcloud
      SONAR_HOST_URL:
        required: false
      SONAR_TOKEN:
        required: false
      SONAR_ORGANIZATION:
        required: false
      # java
      MAVEN_REPO_URL:
        required: false
      MAVEN_REPO_USERNAME:
        required: false
      MAVEN_REPO_PASSWORD:
        required: false
      MAVEN_GPG_SIGN_PRIVATEKEY:
        required: false
      MAVEN_GPG_SIGN_PASSWORD:
        required: false
      MAVEN_GPG_SIGN_KEYID:
        required: false

# permissions, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps
permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# cancel in progress when a new run starts
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# jobs
jobs:
  # info
  info:
    name: Info
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: info
        env:
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          echo "> project modules"
          cid --log-level=${CID_LOGLEVEL:-info} module ls
          echo "> catalog"
          cid --log-level=${CID_LOGLEVEL:-info} catalog list
          echo "> workflows"
          cid --log-level=${CID_LOGLEVEL:-info} workflow ls

  # build
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # provenance signing
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: build
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage build
      - name: upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore
      - name: github pages artifact
        if: inputs.job-pages == true
        uses: actions/upload-pages-artifact@v1
        with:
          path: .dist/cidverse-github-io/html/docs/

  # test
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: test
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage test
      - name: upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: test-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore

  # scan
  scan:
    name: Scan
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      security-events: write
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: download artifacts > build
        uses: actions/download-artifact@v3.0.2
        with:
          name: build-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: download artifacts > test
        uses: actions/download-artifact@v3.0.2
        with:
          name: test-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: scan
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage scan

  # package
  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      id-token: write # provenance signing
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: download artifacts > build
        uses: actions/download-artifact@v3.0.2
        with:
          name: build-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: package
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage package
      - name: upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: package-${{ github.run_id }}
          path: .dist
          retention-days: 1
          if-no-files-found: ignore

  # publish
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [package, scan]
    permissions:
      # create release
      contents: write
      # publish packages
      packages: write
    if: startsWith(github.ref, 'refs/pull/') == false
    environment:
      name: ${{ github.ref == 'refs/tags/v*' && inputs.env-production || inputs.env-development }}
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: prepare environment
        uses: cidverse/ghact-cid-setup@main
        with:
          version: ${{ inputs.cid-version }}
      - name: checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: download artifacts > package
        uses: actions/download-artifact@v3.0.2
        with:
          name: package-${{ github.run_id }}
          path: .dist
        continue-on-error: true
      - name: publish
        env:
          CID_WORKFLOW: ${{ inputs.cid-workflow }}
          CID_LOGLEVEL: ${{ inputs.cid-loglevel }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_REPO_URL: ${{ secrets.MAVEN_REPO_URL }}
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
          MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
          MAVEN_GPG_SIGN_PRIVATEKEY: ${{ secrets.MAVEN_GPG_SIGN_PRIVATEKEY }}
          MAVEN_GPG_SIGN_PASSWORD: ${{ secrets.MAVEN_GPG_SIGN_PASSWORD }}
          MAVEN_GPG_SIGN_KEYID: ${{ secrets.MAVEN_GPG_SIGN_KEYID }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} workflow run "$CID_WORKFLOW" --stage publish

  # Pages
  pages:
    name: Pages
    runs-on: ubuntu-latest
    needs: [scan]
    permissions:
      pages: write
      id-token: write
    if: startsWith(github.ref, 'refs/pull/') == false && inputs.job-pages == true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    timeout-minutes: ${{ inputs.cid-timeout }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.1
